{"ast":null,"code":"import _defineProperty from \"/var/www/React/project1/app-20241008T143330Z-001/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/React/project1/app-20241008T143330Z-001/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/React/project1/app-20241008T143330Z-001/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/React/project1/app-20241008T143330Z-001/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/React/project1/app-20241008T143330Z-001/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/React/project1/app-20241008T143330Z-001/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/React/project1/app-20241008T143330Z-001/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/React/project1/app-20241008T143330Z-001/app/src/components/UpdateRecipe.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateRecipe, fetchRecipe } from '../actions/index';\nimport MutableIngdredients from './MutableIngredients';\nimport { FormErrors } from './FromErrors';\n\nvar UpdateRecipe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateRecipe, _Component);\n\n  function UpdateRecipe(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateRecipe);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateRecipe).call(this, props));\n\n    _this.componentWillReceiveProps = function (nextProps) {\n      _this.setState({\n        id: nextProps.recipe.id,\n        title: nextProps.recipe.title,\n        instruction: nextProps.recipe.instruction,\n        mealPrepTime: nextProps.recipe.mealPrepTime,\n        sourceUrl: nextProps.recipe.sourceUrl,\n        ingredients: nextProps.recipe.ingredients\n      });\n    };\n\n    _this.componentDidMount = function () {\n      if (_this.props.match.params.id) {\n        _this.props.fetchRecipe(_this.props.match.params.id);\n      }\n    };\n\n    _this.handleInputChange = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        title: '',\n        instruction: '',\n        mealPrepTime: '',\n        sourceUrl: '',\n        ingredients: [''],\n        redirect: true\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.title.trim() && _this.state.instruction.trim()) {\n        _this.props.onUpdateRecipe(_this.state);\n\n        _this.handleReset();\n      }\n    };\n\n    _this.state = {\n      id: 0,\n      title: '',\n      instruction: '',\n      mealPrepTime: '',\n      sourceUrl: '',\n      ingredients: [''],\n      formErrors: {\n        title: '',\n        mealPrepTime: ''\n      }\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UpdateRecipe, [{\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var titleValid = this.state.titleValid;\n      var mealPrepTimeValid = this.state.mealPrepTimeValid;\n\n      switch (fieldName) {\n        case 'title':\n          //titleValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          titleValid = value.length < 30 && value.length > 0;\n          fieldValidationErrors.title = titleValid ? '' : ' must be less than 30 characters, cannot be empty';\n          break;\n\n        case 'mealPrepTime':\n          mealPrepTimeValid = value > 0;\n          fieldValidationErrors.mealPrepTime = mealPrepTimeValid ? '' : ' must be bigger than 0';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        titleValid: titleValid,\n        mealPrepTimeValid: mealPrepTimeValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.titleValid && this.state.mealPrepTimeValid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var redirect = this.state.redirect;\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(MutableIngdredients, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        className: \"form-control\",\n        name: \"title\",\n        onChange: this.handleInputChange,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        cols: \"19\",\n        rows: \"8\",\n        placeholder: \"Instruction\",\n        className: \"form-control\",\n        name: \"instruction\",\n        onChange: this.handleInputChange,\n        value: this.state.instruction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        placeholder: \"Meal preparation time (in minutes)\",\n        className: \"form-control\",\n        name: \"mealPrepTime\",\n        onChange: this.handleInputChange,\n        value: this.state.mealPrepTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"url\",\n        placeholder: \"Source URL\",\n        className: \"form-control\",\n        name: \"sourceUrl\",\n        onChange: this.handleInputChange,\n        value: this.state.sourceUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Update recipe\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Reset\"))), React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UpdateRecipe;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    recipe: state.recipes.recipe\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateRecipe: updateRecipe,\n  fetchRecipe: fetchRecipe\n})(UpdateRecipe);","map":{"version":3,"sources":["/var/www/React/project1/app-20241008T143330Z-001/app/src/components/UpdateRecipe.js"],"names":["React","Component","Redirect","connect","updateRecipe","fetchRecipe","MutableIngdredients","FormErrors","UpdateRecipe","props","componentWillReceiveProps","nextProps","setState","id","recipe","title","instruction","mealPrepTime","sourceUrl","ingredients","componentDidMount","match","params","handleInputChange","e","name","target","value","validateField","handleReset","redirect","handleSubmit","preventDefault","state","trim","onUpdateRecipe","formErrors","bind","fieldName","fieldValidationErrors","titleValid","mealPrepTimeValid","length","validateForm","formValid","mapStateToProps","recipes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateRecipe, fetchRecipe } from '../actions/index';\nimport MutableIngdredients from './MutableIngredients';\nimport {FormErrors} from './FromErrors';\n\nclass UpdateRecipe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            title: '',\n            instruction: '',\n            mealPrepTime: '',\n            sourceUrl: '',\n            ingredients: [''],\n            formErrors: { title: '', mealPrepTime: '' },\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        this.setState({\n            id: nextProps.recipe.id,\n            title: nextProps.recipe.title,\n            instruction: nextProps.recipe.instruction,\n            mealPrepTime: nextProps.recipe.mealPrepTime,\n            sourceUrl: nextProps.recipe.sourceUrl,\n            ingredients: nextProps.recipe.ingredients\n        });\n    }\n\n    componentDidMount = () => {\n        if (this.props.match.params.id) {\n            this.props.fetchRecipe(this.props.match.params.id);\n        }\n    }\n\n    handleInputChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value },\n            () => { this.validateField(name, value) });\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let mealPrepTimeValid = this.state.mealPrepTimeValid;\n\n        switch (fieldName) {\n            case 'title':\n                //titleValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                titleValid = value.length < 30 && value.length > 0;\n                fieldValidationErrors.title = titleValid ? '' : ' must be less than 30 characters, cannot be empty';\n                break;\n            case 'mealPrepTime':\n                mealPrepTimeValid = value > 0;\n                fieldValidationErrors.mealPrepTime = mealPrepTimeValid ? '' : ' must be bigger than 0';\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            titleValid: titleValid,\n            mealPrepTimeValid: mealPrepTimeValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({ formValid: this.state.titleValid && this.state.mealPrepTimeValid });\n    }\n\n    handleReset = () => {\n        this.setState({\n            title: '',\n            instruction: '',\n            mealPrepTime: '',\n            sourceUrl: '',\n            ingredients: [''],\n            redirect: true\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.title.trim() && this.state.instruction.trim()) {\n            this.props.onUpdateRecipe(this.state);\n            this.handleReset();\n        }\n    };\n    render() {\n        const { redirect } = this.state;\n        if (redirect) {\n            return <Redirect to='/' />;\n        }\n        return (\n            <div>\n                <MutableIngdredients ingredients={this.state.ingredients} />\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            className=\"form-control\"\n                            name=\"title\"\n                            onChange={this.handleInputChange}\n                            value={this.state.title}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <textarea\n                            cols=\"19\"\n                            rows=\"8\"\n                            placeholder=\"Instruction\"\n                            className=\"form-control\"\n                            name=\"instruction\"\n                            onChange={this.handleInputChange}\n                            value={this.state.instruction}>\n                        </textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"number\"\n                            placeholder=\"Meal preparation time (in minutes)\"\n                            className=\"form-control\"\n                            name=\"mealPrepTime\"\n                            onChange={this.handleInputChange}\n                            value={this.state.mealPrepTime}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"url\"\n                            placeholder=\"Source URL\"\n                            className=\"form-control\"\n                            name=\"sourceUrl\"\n                            onChange={this.handleInputChange}\n                            value={this.state.sourceUrl}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" disabled={!this.state.formValid} className=\"btn btn-primary\">Update recipe</button>\n                        <button type=\"button\" className=\"btn btn-warning\" onClick={this.handleReset}>Reset</button>\n                    </div>\n                </form>\n                <div className=\"panel panel-default\">\n                    <FormErrors formErrors={this.state.formErrors} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    recipe: state.recipes.recipe\n});\n\nexport default connect(mapStateToProps, { updateRecipe, fetchRecipe })(UpdateRecipe);\n"]},"metadata":{},"sourceType":"module"}