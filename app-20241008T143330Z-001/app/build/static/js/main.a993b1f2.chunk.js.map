{"version":3,"sources":["components/MutableIngredients.js","actions/types.js","actions/index.js","components/FromErrors.js","components/NewRecipe.js","containers/CreateRecipe.js","components/UpdateRecipe.js","containers/EditRecipe.js","App.js","serviceWorker.js","reducers/index.js","reducers/recipeReducer.js","index.js"],"names":["MutableIngdredients","props","_this","Object","_var_www_React_project1_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_var_www_React_project1_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_var_www_React_project1_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleSubmitIngredient","e","preventDefault","ingredients","push","state","ingredient","handleResetIngredient","handleIngredientInputChange","setState","_var_www_React_project1_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","value","bind","_var_www_React_project1_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleClickIndex","index","event","eval","splice","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","map","item","key","type","className","onClick","onSubmit","placeholder","onChange","Component","ADD_RECIPE","DELETE_RECIPE","UPDATE_RECIPE","FETCH_RECIPES","FETCH_RECIPE","apiUrl","createRecipeSuccess","data","payload","id","title","instruction","mealPrepTime","sourceUrl","updateRecipe","recipe","dispatch","axios","put","concat","then","response","updateRecipeSuccess","fetchAllRecipes","catch","error","get","recipes","FormErrors","_ref","formErrors","react_default","keys","fieldName","i","length","NewRecipe","redirect","handleInputChange","defineProperty","validateField","handleSubmit","trim","onAddRecipe","handleReset","fieldValidationErrors","titleValid","mealPrepTimeValid","validateForm","formValid","Redirect","to","MutableIngredients","cols","rows","disabled","FromErrors_FormErrors","React","connect","post","createRecipe","UpdateRecipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentWillReceiveProps","nextProps","componentDidMount","match","params","fetchRecipe","onUpdateRecipe","assertThisInitialized","App","BrowserRouter","Route","exact","path","component","RecipeList","CreateRecipe","EditRecipe","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","combineReducers","arguments","undefined","action","toConsumableArray","filter","objectSpread","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a993b1f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass MutableIngdredients extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingredients: props.ingredients,\n            ingredient: ''\n        };\n        this.handleIngredientInputChange = this.handleIngredientInputChange.bind(this);\n        this.handleSubmitIngredient = this.handleSubmitIngredient.bind(this);\n        this.handleClickIndex = this.handleClickIndex.bind(this)\n    }\n\n    handleSubmitIngredient = e => {\n        e.preventDefault();\n        this.props.ingredients.push(this.state.ingredient);\n        this.handleResetIngredient();\n    };\n\n    handleIngredientInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleResetIngredient = () => {\n        this.setState({\n            ingredients: this.state.ingredients,\n            ingredient: ''\n        });\n    };\n\n    handleClickIndex(index, event) {\n        eval(this[event.target.name]).bind(this)(index, event)\n    }\n\n    removeIngredient(index, event) {\n        const ingredients = this.props.ingredients;\n        ingredients.splice(index, 1);\n        this.setState({\n            ingredients: {ingredients},\n            ingredient: ''\n        });\n      }\n\n    render() {\n        return <div>\n            <h1>List of ingredients</h1>\n            <ul>\n                {this.props.ingredients.map((item, index) =>\n                        <li key={index}>\n                            {item}\n                            <button name=\"removeIngredient\" type=\"button\" className=\"btn btn-warning\" onClick={event => this.handleClickIndex(index, event)}>x</button>\n                        </li>)}\n            </ul>\n            <div>\n                <form onSubmit={this.handleSubmitIngredient}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"ingredient\"\n                            className=\"form-control\"\n                            name=\"ingredient\"\n                            onChange={this.handleIngredientInputChange}\n                            value={this.state.ingredient}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\">Add ingredient</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    }\n}\nexport default MutableIngdredients;","export const ADD_RECIPE = 'ADD_RECIPE';\nexport const DELETE_RECIPE = 'DELETE_RECIPE';\nexport const UPDATE_RECIPE = 'UPDATE_RECIPE';\nexport const FETCH_RECIPES = 'FETCH_RECIPES';\nexport const FETCH_RECIPE = 'FETCH_RECIPE';\n","import { ADD_RECIPE, DELETE_RECIPE, FETCH_RECIPES, UPDATE_RECIPE, FETCH_RECIPE} from './types';\nimport axios from 'axios';\n\nconst apiUrl = 'http://localhost:3000/recipes/';\n\nexport const createRecipe = ({ title, instruction, ingredients, mealPrepTime, sourceUrl }) => {\n  return (dispatch) => {\n    return axios.post(`${apiUrl}`, {title, instruction, ingredients, mealPrepTime, sourceUrl})\n      .then(response => {\n        dispatch(createRecipeSuccess(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\nexport const createRecipeSuccess =  (data) => {\n  return {\n    type: ADD_RECIPE,\n    payload: {\n      id: data.id,\n      title: data.title,\n      instruction: data.instruction,\n      mealPrepTime: data.mealPrepTime,\n      sourceUrl: data.sourceUrl,\n      ingredients: data.ingredients,\n    }\n  }\n};\n\nexport const updateRecipe = (recipe) => dispatch => {\n  return axios.put(`${apiUrl}/${recipe.id}`, recipe)\n    .then(response => dispatch(updateRecipeSuccess(response.data)))\n    .then(dispatch(fetchAllRecipes()) )\n    .catch(error => {\n      throw(error);\n    });\n}\n\nexport const updateRecipeSuccess =  (recipe) => {\n  return {\n    type: UPDATE_RECIPE,\n    payload: recipe\n  }\n};\n\nexport const fetchRecipe = (id) => dispatch => {\n  return axios.get(`${apiUrl}/${id}`)\n    .then(response => {\n      dispatch({\n        type: FETCH_RECIPE,\n        payload: response.data\n      })\n    })\n    .catch(error => {\n      throw(error);\n    });\n};\n\n\nexport const deleteRecipeSuccess = id => {\n  return {\n    type: DELETE_RECIPE,\n    payload: id\n  }\n}\n\nexport const deleteRecipe = id => {\n  return (dispatch) => {\n    return axios.delete(`${apiUrl}/${id}`)\n      .then(response => {\n        dispatch(deleteRecipeSuccess(id))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\nexport const fetchRecipes = (recipes) => {\n  return {\n    type: FETCH_RECIPES,\n    recipes\n  }\n};\n\nexport const fetchAllRecipes = () => {\n  return (dispatch) => {\n    return axios.get(apiUrl)\n      .then(response => {\n        dispatch(fetchRecipes(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};","import React from 'react';\n\nexport const FormErrors = ({formErrors}) =>\n  <div className='formErrors'>\n    {Object.keys(formErrors).map((fieldName, i) => {\n      if(formErrors[fieldName].length > 0){\n        return (\n          <p key={i}>{fieldName} {formErrors[fieldName]}</p>\n        )        \n      } else {\n        return '';\n      }\n    })}\n  </div>","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport MutableIngdredients from './MutableIngredients';\nimport {FormErrors} from './FromErrors';\n\nclass NewRecipe extends React.Component {\n  state = {\n    title: '',\n    instruction: '',\n    ingredients: [],\n    mealPrepTime: '',\n    sourceUrl: '',\n    redirect: false,\n    formErrors: { title: '', mealPrepTime: '' },\n  };\n\n  handleInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value },\n      () => { this.validateField(name, value) });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let titleValid = this.state.titleValid;\n    let mealPrepTimeValid = this.state.mealPrepTimeValid;\n\n    switch (fieldName) {\n      case 'title':\n        //titleValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        titleValid = value.length < 20 && value.length>0 ;\n        fieldValidationErrors.title = titleValid ? '' : ' must be less than 20 characters, cannot be empty';\n        break;\n      case 'mealPrepTime':\n        mealPrepTimeValid = value > 0;\n        fieldValidationErrors.mealPrepTime = mealPrepTimeValid ? '' : ' must be bigger than 0';\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      titleValid: titleValid,\n      mealPrepTimeValid: mealPrepTimeValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({ formValid: this.state.titleValid && this.state.mealPrepTimeValid });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.title.trim() && this.state.instruction.trim()) {\n      this.props.onAddRecipe(this.state);\n      this.handleReset();\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      title: '',\n      instruction: '',\n      ingredients: [],\n      mealPrepTime: '',\n      sourceUrl: '',\n      redirect: true\n    });\n  };\n\n  render() {\n\n    const { redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to='/' />;\n    }\n\n    return (\n      <div>\n        <MutableIngdredients ingredients={this.state.ingredients} />\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Title\"\n              className=\"form-control\"\n              name=\"title\"\n              onChange={this.handleInputChange}\n              value={this.state.title}\n            />\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              cols=\"19\"\n              rows=\"8\"\n              placeholder=\"Instruction\"\n              className=\"form-control\"\n              name=\"instruction\"\n              onChange={this.handleInputChange}\n              value={this.state.instruction}>\n            </textarea>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"number\"\n              placeholder=\"Meal preparation time (in minutes)\"\n              className=\"form-control\"\n              name=\"mealPrepTime\"\n              onChange={this.handleInputChange}\n              value={this.state.mealPrepTime}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"url\"\n              placeholder=\"Source URL\"\n              className=\"form-control\"\n              name=\"sourceUrl\"\n              onChange={this.handleInputChange}\n              value={this.state.sourceUrl}\n            />\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" disabled={!this.state.formValid} className=\"btn btn-primary\">Add Recipe</button>\n            <button type=\"button\" className=\"btn btn-warning\" onClick={this.handleReset}>\n              Reset\n            </button>\n          </div>\n\n        </form>\n        <div className=\"panel panel-default\">\n          <FormErrors formErrors={this.state.formErrors} />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default NewRecipe;","import { connect } from 'react-redux';\nimport { createRecipe } from '../actions';\nimport NewRecipe from '../components/NewRecipe';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddRecipe: recipe => {\n      dispatch(createRecipe(recipe));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NewRecipe);","import React, { Component } from 'react';\n\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateRecipe, fetchRecipe } from '../actions/index';\nimport MutableIngdredients from './MutableIngredients';\nimport {FormErrors} from './FromErrors';\n\nclass UpdateRecipe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            title: '',\n            instruction: '',\n            mealPrepTime: '',\n            sourceUrl: '',\n            ingredients: [''],\n            formErrors: { title: '', mealPrepTime: '' },\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        this.setState({\n            id: nextProps.recipe.id,\n            title: nextProps.recipe.title,\n            instruction: nextProps.recipe.instruction,\n            mealPrepTime: nextProps.recipe.mealPrepTime,\n            sourceUrl: nextProps.recipe.sourceUrl,\n            ingredients: nextProps.recipe.ingredients\n        });\n    }\n\n    componentDidMount = () => {\n        if (this.props.match.params.id) {\n            this.props.fetchRecipe(this.props.match.params.id);\n        }\n    }\n\n    handleInputChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value },\n            () => { this.validateField(name, value) });\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let mealPrepTimeValid = this.state.mealPrepTimeValid;\n\n        switch (fieldName) {\n            case 'title':\n                //titleValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                titleValid = value.length < 30 && value.length > 0;\n                fieldValidationErrors.title = titleValid ? '' : ' must be less than 30 characters, cannot be empty';\n                break;\n            case 'mealPrepTime':\n                mealPrepTimeValid = value > 0;\n                fieldValidationErrors.mealPrepTime = mealPrepTimeValid ? '' : ' must be bigger than 0';\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            titleValid: titleValid,\n            mealPrepTimeValid: mealPrepTimeValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({ formValid: this.state.titleValid && this.state.mealPrepTimeValid });\n    }\n\n    handleReset = () => {\n        this.setState({\n            title: '',\n            instruction: '',\n            mealPrepTime: '',\n            sourceUrl: '',\n            ingredients: [''],\n            redirect: true\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.title.trim() && this.state.instruction.trim()) {\n            this.props.onUpdateRecipe(this.state);\n            this.handleReset();\n        }\n    };\n    render() {\n        const { redirect } = this.state;\n        if (redirect) {\n            return <Redirect to='/' />;\n        }\n        return (\n            <div>\n                <MutableIngdredients ingredients={this.state.ingredients} />\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            className=\"form-control\"\n                            name=\"title\"\n                            onChange={this.handleInputChange}\n                            value={this.state.title}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <textarea\n                            cols=\"19\"\n                            rows=\"8\"\n                            placeholder=\"Instruction\"\n                            className=\"form-control\"\n                            name=\"instruction\"\n                            onChange={this.handleInputChange}\n                            value={this.state.instruction}>\n                        </textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"number\"\n                            placeholder=\"Meal preparation time (in minutes)\"\n                            className=\"form-control\"\n                            name=\"mealPrepTime\"\n                            onChange={this.handleInputChange}\n                            value={this.state.mealPrepTime}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"url\"\n                            placeholder=\"Source URL\"\n                            className=\"form-control\"\n                            name=\"sourceUrl\"\n                            onChange={this.handleInputChange}\n                            value={this.state.sourceUrl}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" disabled={!this.state.formValid} className=\"btn btn-primary\">Update recipe</button>\n                        <button type=\"button\" className=\"btn btn-warning\" onClick={this.handleReset}>Reset</button>\n                    </div>\n                </form>\n                <div className=\"panel panel-default\">\n                    <FormErrors formErrors={this.state.formErrors} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    recipe: state.recipes.recipe\n});\n\nexport default connect(mapStateToProps, { updateRecipe, fetchRecipe })(UpdateRecipe);\n","import { connect } from 'react-redux';\nimport { updateRecipe } from '../actions';\nimport UpdateRecipe from '../components/UpdateRecipe';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateRecipe: recipe => {\n      dispatch(updateRecipe(recipe));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(UpdateRecipe);","import React, { Component } from 'react';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport CreateRecipe from './containers/CreateRecipe';\nimport RecipeList from './containers/RecipeList';\nimport EditRecipe from './containers/EditRecipe';\n\n\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n\nconst stylesApp = {\n  marginTop: 40\n  \n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"container\">\n      <Route exact path=\"/\" component={RecipeList} />\n      <Route path=\"/new\" component={CreateRecipe} />\n      <Route path=\"/edit/:id\" component={EditRecipe} />\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport recipes from './recipeReducer';\n\nexport default combineReducers({\n    recipes: recipes\n});","import { ADD_RECIPE, DELETE_RECIPE, FETCH_RECIPES, UPDATE_RECIPE, FETCH_RECIPE } from '../actions/types';\n\nexport default function recipeReducer(state = [], action) {\n    switch (action.type) {\n        case ADD_RECIPE:\n            return [...state, action.payload];\n        case DELETE_RECIPE:\n            return state.filter(recipe => recipe.id !== action.payload);\n        case FETCH_RECIPES:\n            return action.recipes;\n        case UPDATE_RECIPE:\n            return [ action.payload, ...state];\n        case FETCH_RECIPE:\n            return {\n                ...state,\n                recipe: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport { fetchAllRecipes } from './actions/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nstore.dispatch(fetchAllRecipes());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}