{"version":3,"sources":["components/MutableIngredients.js","actions/types.js","actions/index.js","components/FromErrors.js","components/NewRecipe.js","containers/CreateRecipe.js","components/IngredientsList.js","components/Recipe.js","containers/RecipeList.js","components/UpdateRecipe.js","containers/EditRecipe.js","App.js","serviceWorker.js","reducers/index.js","reducers/recipeReducer.js","index.js"],"names":["MutableIngdredients","props","_this","Object","_var_www_React_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_var_www_React_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_var_www_React_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleSubmitIngredient","e","preventDefault","ingredients","push","state","ingredient","handleResetIngredient","handleIngredientInputChange","setState","_var_www_React_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","name","value","bind","_var_www_React_app_20241008T143330Z_001_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleClickIndex","index","event","eval","splice","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","map","item","key","type","className","onClick","onSubmit","placeholder","onChange","Component","ADD_RECIPE","DELETE_RECIPE","UPDATE_RECIPE","FETCH_RECIPES","FETCH_RECIPE","apiUrl","createRecipeSuccess","data","payload","id","title","instruction","mealPrepTime","sourceUrl","updateRecipe","recipe","dispatch","axios","put","concat","then","response","updateRecipeSuccess","fetchAllRecipes","catch","error","deleteRecipe","delete","deleteRecipeSuccess","get","recipes","FormErrors","_ref","formErrors","react_default","keys","fieldName","i","length","NewRecipe","redirect","handleInputChange","defineProperty","validateField","handleSubmit","trim","onAddRecipe","handleReset","fieldValidationErrors","titleValid","mealPrepTimeValid","validateForm","formValid","Redirect","to","MutableIngredients","cols","rows","disabled","FromErrors_FormErrors","React","connect","post","createRecipe","IngredientsList","items","styles","borderBottom","background","margin","padding","maxWidth","borderRadius","Recipe","_ref$recipe","onDelete","class","style","href","color","components_IngredientsList","Link","UpdateRecipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentWillReceiveProps","nextProps","componentDidMount","match","params","fetchRecipe","onUpdateRecipe","assertThisInitialized","App","BrowserRouter","Route","exact","path","component","RecipeList","CreateRecipe","EditRecipe","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","combineReducers","arguments","undefined","action","toConsumableArray","filter","objectSpread","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.705d678c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass MutableIngdredients extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingredients: props.ingredients,\n            ingredient: ''\n        };\n        this.handleIngredientInputChange = this.handleIngredientInputChange.bind(this);\n        this.handleSubmitIngredient = this.handleSubmitIngredient.bind(this);\n        this.handleClickIndex = this.handleClickIndex.bind(this)\n    }\n\n    handleSubmitIngredient = e => {\n        e.preventDefault();\n        this.props.ingredients.push(this.state.ingredient);\n        this.handleResetIngredient();\n    };\n\n    handleIngredientInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleResetIngredient = () => {\n        this.setState({\n            ingredients: this.state.ingredients,\n            ingredient: ''\n        });\n    };\n\n    handleClickIndex(index, event) {\n        eval(this[event.target.name]).bind(this)(index, event)\n    }\n\n    removeIngredient(index, event) {\n        const ingredients = this.props.ingredients;\n        ingredients.splice(index, 1);\n        this.setState({\n            ingredients: {ingredients},\n            ingredient: ''\n        });\n      }\n\n    render() {\n        return <div>\n            <h1>List of ingredients</h1>\n            <ul>\n                {this.props.ingredients.map((item, index) =>\n                        <li key={index}>\n                            {item}\n                            <button name=\"removeIngredient\" type=\"button\" className=\"btn btn-warning\" onClick={event => this.handleClickIndex(index, event)}>x</button>\n                        </li>)}\n            </ul>\n            <div>\n                <form onSubmit={this.handleSubmitIngredient}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"ingredient\"\n                            className=\"form-control\"\n                            name=\"ingredient\"\n                            onChange={this.handleIngredientInputChange}\n                            value={this.state.ingredient}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\">Add ingredient</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    }\n}\nexport default MutableIngdredients;","export const ADD_RECIPE = 'ADD_RECIPE';\nexport const DELETE_RECIPE = 'DELETE_RECIPE';\nexport const UPDATE_RECIPE = 'UPDATE_RECIPE';\nexport const FETCH_RECIPES = 'FETCH_RECIPES';\nexport const FETCH_RECIPE = 'FETCH_RECIPE';\n","import { ADD_RECIPE, DELETE_RECIPE, FETCH_RECIPES, UPDATE_RECIPE, FETCH_RECIPE} from './types';\nimport axios from 'axios';\n\nconst apiUrl = 'http://localhost:3000/recipes/';\n\nexport const createRecipe = ({ title, instruction, ingredients, mealPrepTime, sourceUrl }) => {\n  return (dispatch) => {\n    return axios.post(`${apiUrl}`, {title, instruction, ingredients, mealPrepTime, sourceUrl})\n      .then(response => {\n        dispatch(createRecipeSuccess(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\nexport const createRecipeSuccess =  (data) => {\n  return {\n    type: ADD_RECIPE,\n    payload: {\n      id: data.id,\n      title: data.title,\n      instruction: data.instruction,\n      mealPrepTime: data.mealPrepTime,\n      sourceUrl: data.sourceUrl,\n      ingredients: data.ingredients,\n    }\n  }\n};\n\nexport const updateRecipe = (recipe) => dispatch => {\n  return axios.put(`${apiUrl}/${recipe.id}`, recipe)\n    .then(response => dispatch(updateRecipeSuccess(response.data)))\n    .then(dispatch(fetchAllRecipes()) )\n    .catch(error => {\n      throw(error);\n    });\n}\n\nexport const updateRecipeSuccess =  (recipe) => {\n  return {\n    type: UPDATE_RECIPE,\n    payload: recipe\n  }\n};\n\nexport const fetchRecipe = (id) => dispatch => {\n  return axios.get(`${apiUrl}/${id}`)\n    .then(response => {\n      dispatch({\n        type: FETCH_RECIPE,\n        payload: response.data\n      })\n    })\n    .catch(error => {\n      throw(error);\n    });\n};\n\n\nexport const deleteRecipeSuccess = id => {\n  return {\n    type: DELETE_RECIPE,\n    payload: id\n  }\n}\n\nexport const deleteRecipe = id => {\n  return (dispatch) => {\n    return axios.delete(`${apiUrl}/${id}`)\n      .then(response => {\n        dispatch(deleteRecipeSuccess(id))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};\n\nexport const fetchRecipes = (recipes) => {\n  return {\n    type: FETCH_RECIPES,\n    recipes\n  }\n};\n\nexport const fetchAllRecipes = () => {\n  return (dispatch) => {\n    return axios.get(apiUrl)\n      .then(response => {\n        dispatch(fetchRecipes(response.data))\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n};","import React from 'react';\n\nexport const FormErrors = ({formErrors}) =>\n  <div className='formErrors'>\n    {Object.keys(formErrors).map((fieldName, i) => {\n      if(formErrors[fieldName].length > 0){\n        return (\n          <p key={i}>{fieldName} {formErrors[fieldName]}</p>\n        )        \n      } else {\n        return '';\n      }\n    })}\n  </div>","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport MutableIngdredients from './MutableIngredients';\nimport {FormErrors} from './FromErrors';\n\nclass NewRecipe extends React.Component {\n  state = {\n    title: '',\n    instruction: '',\n    ingredients: [],\n    mealPrepTime: '',\n    sourceUrl: '',\n    redirect: false,\n    formErrors: { title: '', mealPrepTime: '' },\n  };\n\n  handleInputChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value },\n      () => { this.validateField(name, value) });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let titleValid = this.state.titleValid;\n    let mealPrepTimeValid = this.state.mealPrepTimeValid;\n\n    switch (fieldName) {\n      case 'title':\n        //titleValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        titleValid = value.length < 20 && value.length>0 ;\n        fieldValidationErrors.title = titleValid ? '' : ' must be less than 20 characters, cannot be empty';\n        break;\n      case 'mealPrepTime':\n        mealPrepTimeValid = value > 0;\n        fieldValidationErrors.mealPrepTime = mealPrepTimeValid ? '' : ' must be bigger than 0';\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      titleValid: titleValid,\n      mealPrepTimeValid: mealPrepTimeValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({ formValid: this.state.titleValid && this.state.mealPrepTimeValid });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.title.trim() && this.state.instruction.trim()) {\n      this.props.onAddRecipe(this.state);\n      this.handleReset();\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      title: '',\n      instruction: '',\n      ingredients: [],\n      mealPrepTime: '',\n      sourceUrl: '',\n      redirect: true\n    });\n  };\n\n  render() {\n\n    const { redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to='/' />;\n    }\n\n    return (\n      <div>\n        <MutableIngdredients ingredients={this.state.ingredients} />\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Title\"\n              className=\"form-control\"\n              name=\"title\"\n              onChange={this.handleInputChange}\n              value={this.state.title}\n            />\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              cols=\"19\"\n              rows=\"8\"\n              placeholder=\"Instruction\"\n              className=\"form-control\"\n              name=\"instruction\"\n              onChange={this.handleInputChange}\n              value={this.state.instruction}>\n            </textarea>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"number\"\n              placeholder=\"Meal preparation time (in minutes)\"\n              className=\"form-control\"\n              name=\"mealPrepTime\"\n              onChange={this.handleInputChange}\n              value={this.state.mealPrepTime}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"url\"\n              placeholder=\"Source URL\"\n              className=\"form-control\"\n              name=\"sourceUrl\"\n              onChange={this.handleInputChange}\n              value={this.state.sourceUrl}\n            />\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" disabled={!this.state.formValid} className=\"btn btn-primary\">Add Recipe</button>\n            <button type=\"button\" className=\"btn btn-warning\" onClick={this.handleReset}>\n              Reset\n            </button>\n          </div>\n\n        </form>\n        <div className=\"panel panel-default\">\n          <FormErrors formErrors={this.state.formErrors} />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default NewRecipe;","import { connect } from 'react-redux';\nimport { createRecipe } from '../actions';\nimport NewRecipe from '../components/NewRecipe';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddRecipe: recipe => {\n      dispatch(createRecipe(recipe));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NewRecipe);","import React from 'react';\n\nconst IngredientsList = props => (\n  <ul>\n    {\n      props.items.map((item, index) => <li key={index}>{item}</li>)\n    }\n  </ul>\n);\n\nexport default IngredientsList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport IngredientsList from './IngredientsList';\n\nconst styles = {\n  borderBottom: '2px solid #eee',\n  background: '#DABF88',\n  margin: '.75rem auto',\n  padding: '.6rem 1rem',\n  maxWidth: '500px',\n  borderRadius: '7px'\n};\n\nexport default ({ recipe: { title, instruction, id, ingredients, mealPrepTime, sourceUrl }, onDelete }) => {\n return (\n    <div  class=\"col-md-4 text-left\" style={ styles }>\n      <h2>{ title }</h2>\n      <p>Meal prep time: { mealPrepTime }</p>\n      <a href={sourceUrl} style={{ color: '#0D4343' }}>Check original recipe</a>\n      <p>Ingredients:</p>\n      <IngredientsList items={ ingredients } />\n      <p>{ instruction }</p>\n      <button className=\"btn btn-danger\" type=\"button\" onClick={() => onDelete(id)}>\n        Remove\n      </button>\n      <Link className=\"btn btn-primary float-right\" to={\"/edit/\" + id}>Edit</Link>\n    </div>\n  );\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Recipe from '../components/Recipe';\nimport { deleteRecipe } from '../actions';\nimport { Link } from 'react-router-dom'\n\n\nfunction RecipeList({ recipes, onDelete }) {\n\n  if(!recipes.length) {\n    return (\n      <div class=\"text-center\">\n      <h3>There is no recipes :(</h3>\n      <button className=\"btn btn-danger\" >\n        <Link to='/new' style={{ color: '#FFF' }} >Recipe book is empty now, let's start culinary adventure!</Link>\n      </button>\n      </div>\n    )\n  }\n  return (\n    <div  class=\"text-center\">\n      \n    <button className=\"btn btn-danger\"><Link style={{ color: '#FFF' }} to='/new'>Add new recipe</Link></button>\n      {recipes.map(recipe => {\n        return (\n          <Recipe recipe={ recipe } onDelete={ onDelete } key={ recipe.id } />\n        );\n      })}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDelete: id => {\n      dispatch(deleteRecipe(id));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecipeList);","import React, { Component } from 'react';\n\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateRecipe, fetchRecipe } from '../actions/index';\nimport MutableIngdredients from './MutableIngredients';\nimport {FormErrors} from './FromErrors';\n\nclass UpdateRecipe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            title: '',\n            instruction: '',\n            mealPrepTime: '',\n            sourceUrl: '',\n            ingredients: [''],\n            formErrors: { title: '', mealPrepTime: '' },\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        this.setState({\n            id: nextProps.recipe.id,\n            title: nextProps.recipe.title,\n            instruction: nextProps.recipe.instruction,\n            mealPrepTime: nextProps.recipe.mealPrepTime,\n            sourceUrl: nextProps.recipe.sourceUrl,\n            ingredients: nextProps.recipe.ingredients\n        });\n    }\n\n    componentDidMount = () => {\n        if (this.props.match.params.id) {\n            this.props.fetchRecipe(this.props.match.params.id);\n        }\n    }\n\n    handleInputChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value },\n            () => { this.validateField(name, value) });\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let mealPrepTimeValid = this.state.mealPrepTimeValid;\n\n        switch (fieldName) {\n            case 'title':\n                //titleValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                titleValid = value.length < 30 && value.length > 0;\n                fieldValidationErrors.title = titleValid ? '' : ' must be less than 30 characters, cannot be empty';\n                break;\n            case 'mealPrepTime':\n                mealPrepTimeValid = value > 0;\n                fieldValidationErrors.mealPrepTime = mealPrepTimeValid ? '' : ' must be bigger than 0';\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            titleValid: titleValid,\n            mealPrepTimeValid: mealPrepTimeValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({ formValid: this.state.titleValid && this.state.mealPrepTimeValid });\n    }\n\n    handleReset = () => {\n        this.setState({\n            title: '',\n            instruction: '',\n            mealPrepTime: '',\n            sourceUrl: '',\n            ingredients: [''],\n            redirect: true\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.title.trim() && this.state.instruction.trim()) {\n            this.props.onUpdateRecipe(this.state);\n            this.handleReset();\n        }\n    };\n    render() {\n        const { redirect } = this.state;\n        if (redirect) {\n            return <Redirect to='/' />;\n        }\n        return (\n            <div>\n                <MutableIngdredients ingredients={this.state.ingredients} />\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            className=\"form-control\"\n                            name=\"title\"\n                            onChange={this.handleInputChange}\n                            value={this.state.title}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <textarea\n                            cols=\"19\"\n                            rows=\"8\"\n                            placeholder=\"Instruction\"\n                            className=\"form-control\"\n                            name=\"instruction\"\n                            onChange={this.handleInputChange}\n                            value={this.state.instruction}>\n                        </textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"number\"\n                            placeholder=\"Meal preparation time (in minutes)\"\n                            className=\"form-control\"\n                            name=\"mealPrepTime\"\n                            onChange={this.handleInputChange}\n                            value={this.state.mealPrepTime}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"url\"\n                            placeholder=\"Source URL\"\n                            className=\"form-control\"\n                            name=\"sourceUrl\"\n                            onChange={this.handleInputChange}\n                            value={this.state.sourceUrl}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" disabled={!this.state.formValid} className=\"btn btn-primary\">Update recipe</button>\n                        <button type=\"button\" className=\"btn btn-warning\" onClick={this.handleReset}>Reset</button>\n                    </div>\n                </form>\n                <div className=\"panel panel-default\">\n                    <FormErrors formErrors={this.state.formErrors} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    recipe: state.recipes.recipe\n});\n\nexport default connect(mapStateToProps, { updateRecipe, fetchRecipe })(UpdateRecipe);\n","import { connect } from 'react-redux';\nimport { updateRecipe } from '../actions';\nimport UpdateRecipe from '../components/UpdateRecipe';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateRecipe: recipe => {\n      dispatch(updateRecipe(recipe));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(UpdateRecipe);","import React, { Component } from 'react';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport CreateRecipe from './containers/CreateRecipe';\nimport RecipeList from './containers/RecipeList';\nimport EditRecipe from './containers/EditRecipe';\n\n\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n\nconst stylesApp = {\n  marginTop: 40\n  \n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"container\">\n      <Route exact path=\"/\" component={RecipeList} />\n      <Route path=\"/new\" component={CreateRecipe} />\n      <Route path=\"/edit/:id\" component={EditRecipe} />\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport recipes from './recipeReducer';\n\nexport default combineReducers({\n    recipes: recipes\n});","import { ADD_RECIPE, DELETE_RECIPE, FETCH_RECIPES, UPDATE_RECIPE, FETCH_RECIPE } from '../actions/types';\n\nexport default function recipeReducer(state = [], action) {\n    switch (action.type) {\n        case ADD_RECIPE:\n            return [...state, action.payload];\n        case DELETE_RECIPE:\n            return state.filter(recipe => recipe.id !== action.payload);\n        case FETCH_RECIPES:\n            return action.recipes;\n        case UPDATE_RECIPE:\n            return [ action.payload, ...state];\n        case FETCH_RECIPE:\n            return {\n                ...state,\n                recipe: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport { fetchAllRecipes } from './actions/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nstore.dispatch(fetchAllRecipes());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}